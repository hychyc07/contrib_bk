#define here find package variables: LEMON_INCLUDE_DIR, LEMON_DIR, LEMON_LIBRARY


#set (LEMON_HEADERS_DIR "${PROJECT_SOURCE_DIR}" CACHE INTERNAL "Path to lemon files")
#file (GLOB LEMON_HEADERS ${LEMON_HEADERS_DIR}/*.h)

set (LEMON_INCLUDE_DIR 	${PROJECT_SOURCE_DIR} 
						${PROJECT_SOURCE_DIR}/bits 
						${PROJECT_SOURCE_DIR}/concepts
						${PROJECT_BINARY_DIR}
						CACHE INTERNAL "Path to lemon files")
message (STATUS "lemon include dir: ${LEMON_INCLUDE_DIR}")

set (LEMON_DIR 	${PROJECT_BINARY_DIR}/lemon/Debug 
				${PROJECT_BINARY_DIR}/lemon/Release
				CACHE INTERNAL "Path to lemon libs")

set (BODYSCHEMALIB_INCLUDES ${LEMON_INCLUDE_DIR})
set (BODYSCHEMALIB_LIBS ${BODYSCHEMALIB_LIBS} ${BODYSCHEMALIB_INSTALL_DIR}/lemon)

INCLUDE_DIRECTORIES(
  ${PROJECT_SOURCE_DIR}
  ${PROJECT_BINARY_DIR}
)

SET(LEMON_SOURCES
  base.cc
  color.cc
  bits/windows.cc
)

CONFIGURE_FILE(
  ${CMAKE_CURRENT_SOURCE_DIR}/config.h.cmake
  ${CMAKE_CURRENT_BINARY_DIR}/config.h
)

CONFIGURE_FILE(
  ${CMAKE_CURRENT_SOURCE_DIR}/lemon.pc.cmake
  ${CMAKE_CURRENT_BINARY_DIR}/lemon.pc
  @ONLY
)

file (GLOB LEMON_HEADERS ${LEMON_INCLUDE_DIR}/*.h)
message(STATUS "Lemon header files: ${LEMON_HEADERS}")

IF(UNIX)
	set(LEMON_LIBRARY liblemon CACHE INTERNAL "lemon lib")
	
	#file (GLOB LEMON_LIBRARY ${CMAKE_CURRENT_SOURCE_DIR}/bodySchemaLib/mini_lemon/lib/*.a)
ELSE(UNIX)
	set(LEMON_LIBRARY lemon CACHE INTERNAL "lemon lib")
	
	#file (GLOB LEMON_LIBRARY ${CMAKE_CURRENT_SOURCE_DIR}/bodySchemaLib/mini_lemon/lib/*.lib)
ENDIF(UNIX)

set(BODYSCHEMALIB_LIBS ${BODYSCHEMALIB_LIBS}/lemon)
set(BODYSCHEMALIB_LIB_NAMES ${LEMON_LIBRARY})
message(STATUS "LIBRARIES FOR LEMON: ${BODYSCHEMALIB_LIBS}")


#IF(LEMON_HAVE_GLPK)
#  SET(LEMON_SOURCES ${LEMON_SOURCES} glpk.cc)
#  INCLUDE_DIRECTORIES(${GLPK_INCLUDE_DIRS})
#  IF(WIN32)
#    INSTALL(FILES ${GLPK_BIN_DIR}/glpk.dll DESTINATION bin)
#    INSTALL(FILES ${GLPK_BIN_DIR}/libltdl3.dll DESTINATION bin)
#    INSTALL(FILES ${GLPK_BIN_DIR}/zlib1.dll DESTINATION bin)
#  ENDIF()
#ENDIF()
#
#IF(LEMON_HAVE_CPLEX)
#  SET(LEMON_SOURCES ${LEMON_SOURCES} cplex.cc)
#  INCLUDE_DIRECTORIES(${CPLEX_INCLUDE_DIRS})
#ENDIF()
#
#IF(LEMON_HAVE_CLP)
#  SET(LEMON_SOURCES ${LEMON_SOURCES} clp.cc)
#  INCLUDE_DIRECTORIES(${COIN_INCLUDE_DIRS})
#ENDIF()
#
#IF(LEMON_HAVE_CBC)
#  SET(LEMON_SOURCES ${LEMON_SOURCES} cbc.cc)
#  INCLUDE_DIRECTORIES(${COIN_INCLUDE_DIRS})
#ENDIF()

ADD_LIBRARY(lemon ${LEMON_SOURCES})
IF(UNIX)
  SET_TARGET_PROPERTIES(lemon PROPERTIES OUTPUT_NAME emon)
ENDIF()


INSTALL(
  TARGETS lemon
  ARCHIVE DESTINATION ${BODYSCHEMALIB_INSTALL_DIR}/lemon
  COMPONENT library
)

INSTALL(
  DIRECTORY . bits concepts
  DESTINATION ${BODYSCHEMALIB_INCLUDE_DIR}/lemon
  COMPONENT headers
  FILES_MATCHING PATTERN "*.h"
)

INSTALL(
  FILES ${CMAKE_CURRENT_BINARY_DIR}/config.h
  DESTINATION ${BODYSCHEMALIB_INCLUDE_DIR}/lemon
  COMPONENT headers
)

INSTALL(
  FILES ${CMAKE_CURRENT_BINARY_DIR}/lemon.pc
  DESTINATION ${BODYSCHEMALIB_INSTALL_DIR}/lemon/pkgconfig
)