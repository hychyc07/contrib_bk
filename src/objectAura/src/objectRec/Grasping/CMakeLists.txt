# Generated by "yarp cmake"

# A cmake file to get started with for new YARP projects.
# It assumes you want to build an executable from source code in 
# the current directory.
# Replace "yarpy" with whatever your executable should be called.
# There's some stuff to make compiling devices easier too.

cmake_minimum_required(VERSION 2.6)

SET(KEYWORD "grasp")

# Start a project.
PROJECT(${KEYWORD})

# Find YARP.  Point the YARP_DIR environment variable at your build.
#FIND_PACKAGE(YARP)

# find YARP
find_package(YARP)
find_package(ICUB REQUIRED)

# add YARP include directories
include_directories(${YARP_INCLUDE_DIRS})
include_directories(${ICUB_INCLUDE_DIRS})
# Search for source code.
FILE(GLOB folder_source graspIn.cpp main.cpp)
FILE(GLOB folder_header graspIn.h)
SOURCE_GROUP("Source Files" FILES ${folder_source})
SOURCE_GROUP("Header Files" FILES ${folder_header})

## Automatically add include directories if needed.
#FOREACH(header_file ${folder_header})
#  GET_FILENAME_COMPONENT(p ${header_file} PATH)
#  INCLUDE_DIRECTORIES(${p})
#ENDFOREACH(header_file ${folder_header})

# Set up our main executable.
IF (folder_source)
  ADD_LIBRARY(${KEYWORD} graspIn.cpp graspIn.h)
  ADD_EXECUTABLE(graspinterface ${folder_source} ${folder_header})
  
ELSE (folder_source)
  MESSAGE(FATAL_ERROR "No source code files found. Please add something")
ENDIF (folder_source)

INCLUDE_DIRECTORIES(${OPENCV_INCLUDE_DIR})

target_link_libraries(graspinterface ${YARP_LIBRARIES})
target_link_libraries(graspinterface ${ICUB_LIBRARIES})
# Link OpenCV libraries
# TARGET_LINK_LIBRARIES(${KEYWORD} ${OPENCV_LIBRARIES})

